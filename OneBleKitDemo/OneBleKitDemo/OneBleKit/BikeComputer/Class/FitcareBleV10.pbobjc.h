// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fitcare_ble_V1.0.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum DevType

/**
 * ================================Object ID = 01===============================
 * 设备类型
 **/
typedef GPB_ENUM(DevType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DevType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 手环类设备 */
  DevType_DevTypeHandwatch = 0,

  /** HUB类设备 */
  DevType_DevTypeHub = 1,

  /** 码表类设备 */
  DevType_DevTypeBikeComputer = 2,
};

GPBEnumDescriptor *DevType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DevType_IsValidValue(int32_t value);

#pragma mark - Enum FileTransSize

/** 文件内容传输一个包字节数 */
typedef GPB_ENUM(FileTransSize) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  FileTransSize_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 支持128字节传输 */
  FileTransSize_FileTransSize128 = 0,

  /** 支持256字节传输 */
  FileTransSize_FileTransSize256 = 1,

  /** 支持512字节传输 */
  FileTransSize_FileTransSize512 = 2,

  /** 支持1024字节传输 */
  FileTransSize_FileTransSize1024 = 3,
};

GPBEnumDescriptor *FileTransSize_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL FileTransSize_IsValidValue(int32_t value);

#pragma mark - Enum FileTransStatus

/** 文件传输状态 */
typedef GPB_ENUM(FileTransStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  FileTransStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 空闲状态 */
  FileTransStatus_FileTransStatusIdle = 0,

  /** 传输中 */
  FileTransStatus_FileTransStatusTrans = 1,
};

GPBEnumDescriptor *FileTransStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL FileTransStatus_IsValidValue(int32_t value);

#pragma mark - FitcareBleV10Root

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface FitcareBleV10Root : GPBRootObject
@end

#pragma mark - DeviceInfo

typedef GPB_ENUM(DeviceInfo_FieldNumber) {
  DeviceInfo_FieldNumber_DevType = 1,
  DeviceInfo_FieldNumber_FileTransSize = 2,
  DeviceInfo_FieldNumber_HardwareVersion = 3,
  DeviceInfo_FieldNumber_SoftwareVersion = 4,
  DeviceInfo_FieldNumber_SerialNumber = 5,
  DeviceInfo_FieldNumber_ProtocolVersion = 6,
};

GPB_FINAL @interface DeviceInfo : GPBMessage

/** 设备类型 */
@property(nonatomic, readwrite) DevType devType;

/** 文件内容传输支持的字节数 */
@property(nonatomic, readwrite) FileTransSize fileTransSize;

/** 硬件版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hardwareVersion;

/** 软件版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *softwareVersion;

/** 产品序列号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serialNumber;

/** 协议版本号V1.0(与文档版本不同)，除非改动比较大，影响了之前协议使用，否则不升级版本号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *protocolVersion;

@end

/**
 * Fetches the raw value of a @c DeviceInfo's @c devType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DeviceInfo_DevType_RawValue(DeviceInfo *message);
/**
 * Sets the raw value of an @c DeviceInfo's @c devType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDeviceInfo_DevType_RawValue(DeviceInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c DeviceInfo's @c fileTransSize property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DeviceInfo_FileTransSize_RawValue(DeviceInfo *message);
/**
 * Sets the raw value of an @c DeviceInfo's @c fileTransSize property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDeviceInfo_FileTransSize_RawValue(DeviceInfo *message, int32_t value);

#pragma mark - UtcInfo

typedef GPB_ENUM(UtcInfo_FieldNumber) {
  UtcInfo_FieldNumber_Utc = 1,
  UtcInfo_FieldNumber_TiemZone = 2,
};

GPB_FINAL @interface UtcInfo : GPBMessage

/** 时间戳(0时区的时间戳) */
@property(nonatomic, readwrite) uint32_t utc;

/** 时区，例如7.5 */
@property(nonatomic, readwrite) float tiemZone;

@end

#pragma mark - HistoryGetRsp

typedef GPB_ENUM(HistoryGetRsp_FieldNumber) {
  HistoryGetRsp_FieldNumber_IsExist = 1,
};

/**
 * 历史数据获取响应
 **/
GPB_FINAL @interface HistoryGetRsp : GPBMessage

/** 历史数据是否存在 */
@property(nonatomic, readwrite) BOOL isExist;

@end

#pragma mark - FileGetReq

typedef GPB_ENUM(FileGetReq_FieldNumber) {
  FileGetReq_FieldNumber_FileName = 1,
};

/**
 * 文件获取请求
 **/
GPB_FINAL @interface FileGetReq : GPBMessage

/** 文件名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;

@end

#pragma mark - FileGetRsp

typedef GPB_ENUM(FileGetRsp_FieldNumber) {
  FileGetRsp_FieldNumber_IsExist = 1,
};

/**
 * 文件获取响应
 **/
GPB_FINAL @interface FileGetRsp : GPBMessage

/** 文件是否存在 */
@property(nonatomic, readwrite) BOOL isExist;

@end

#pragma mark - FileDeleteReq

typedef GPB_ENUM(FileDeleteReq_FieldNumber) {
  FileDeleteReq_FieldNumber_FileName = 1,
};

/**
 * 文件删除请求
 **/
GPB_FINAL @interface FileDeleteReq : GPBMessage

/** 文件名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;

@end

#pragma mark - FileInfo

typedef GPB_ENUM(FileInfo_FieldNumber) {
  FileInfo_FieldNumber_FileName = 1,
  FileInfo_FieldNumber_FileSize = 2,
};

GPB_FINAL @interface FileInfo : GPBMessage

/** 文件名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;

/** 文件大小，字节数 */
@property(nonatomic, readwrite) int32_t fileSize;

@end

#pragma mark - FileTransStatusGetRsp

typedef GPB_ENUM(FileTransStatusGetRsp_FieldNumber) {
  FileTransStatusGetRsp_FieldNumber_FileTransStatus = 1,
};

/**
 * 文件传输状态获取响应
 **/
GPB_FINAL @interface FileTransStatusGetRsp : GPBMessage

/** 文件传输状态 */
@property(nonatomic, readwrite) FileTransStatus fileTransStatus;

@end

/**
 * Fetches the raw value of a @c FileTransStatusGetRsp's @c fileTransStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t FileTransStatusGetRsp_FileTransStatus_RawValue(FileTransStatusGetRsp *message);
/**
 * Sets the raw value of an @c FileTransStatusGetRsp's @c fileTransStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetFileTransStatusGetRsp_FileTransStatus_RawValue(FileTransStatusGetRsp *message, int32_t value);

#pragma mark - StorageGetRsp

typedef GPB_ENUM(StorageGetRsp_FieldNumber) {
  StorageGetRsp_FieldNumber_RemainSize = 1,
  StorageGetRsp_FieldNumber_TotalSize = 2,
};

/**
 * 存储剩余容量获取响应
 **/
GPB_FINAL @interface StorageGetRsp : GPBMessage

/** 剩余容量，单位是 Kb */
@property(nonatomic, readwrite) int32_t remainSize;

/** 总容量，单位是 Kb, */
@property(nonatomic, readwrite) int32_t totalSize;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
